#
# -*- coding: utf-8 -*-
#
# Copyright (c) 2023 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#

version: '3'
services:
  pytorch-resnet50v1-5-inference:
    image: intel/image-recognition:pytorch-max-gpu-resnet50v1-5-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_PYT_BASE_IMAGE: ${MAX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        MAX_PYT_BASE_TAG: ${MAX_PYT_BASE_TAG:-xpu-max}
      dockerfile: docker/max-gpu/pytorch-resnet50v1-5-inference/pytorch-max-series-resnet50v1-5-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"

  pytorch-resnet50v1-5-training:
    image: intel/image-recognition:pytorch-max-gpu-resnet50v1-5-training
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_PYT_BASE_IMAGE: ${MAX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        MAX_PYT_BASE_TAG: ${MAX_PYT_BASE_TAG:-xpu-max}
        VOC_LABELS_URL: ${VOC_LABELS_URL:-https://drive.google.com/uc?id=1q1sXhKIxniInw3WASnEDKYMqPMuiDDvc}   
      dockerfile: docker/max-gpu/pytorch-bert-large-inference/pytorch-max-series-bert-large-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"

  pytorch-bert-large-inference:
    image: intel/language-modeling:pytorch-max-gpu-bert-large-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_PYT_BASE_IMAGE: ${MAX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        MAX_PYT_BASE_TAG: ${MAX_PYT_BASE_TAG:-xpu-max}
      dockerfile: docker/max-gpu/pytorch-bert-large-inference/pytorch-max-series-bert-large-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"

  pytorch-bert-large-training:
    image: intel/language-modeling:pytorch-max-gpu-bert-large-training
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_PYT_BASE_IMAGE: ${MAX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        MAX_PYT_BASE_TAG: ${MAX_PYT_BASE_TAG:-xpu-max}
      dockerfile: docker/max-gpu/pytorch-bert-large-training/pytorch-max-series-bert-large-training.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"

  tf-resnet50v1-5-inference:
    image: intel/image-recognition:tf-max-gpu-resnet50v1-5-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_TF_BASE_IMAGE: ${MAX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        MAX_TF_BASE_TAG: ${MAX_TF_BASE_TAG:-gpu-horovod}   
        INT8_MODEL_URL: ${INT8_MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1_int8.pb}
        FP16_MODEL_URL: ${FP16_MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1.pb}
        FP32_MODEL_URL: ${FP32_MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1.pb}
      dockerfile: docker/max-gpu/tf-resnet50v1-5-inference/tf-max-series-resnet50v1-5-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"

  tf-resnet50v1-5-training:
    image: intel/image-recognition:tf-max-gpu-resnet50v1-5-training
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_TF_BASE_IMAGE: ${MAX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        MAX_TF_BASE_TAG: ${MAX_TF_BASE_TAG:-gpu-horovod}   
      dockerfile: docker/max-gpu/tf-resnet50v1-5-training/tf-max-series-resnet50v1-5-training.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
      
  tf-bert-large-inference:
    image: intel/language-modeling:tf-max-gpu-bert-large-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_TF_BASE_IMAGE: ${MAX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        MAX_TF_BASE_TAG: ${MAX_TF_BASE_TAG:-gpu-horovod}   
        MODEL_URL: ${MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/v2_7_0/fp32_bert_squad.pb}
      dockerfile: docker/max-gpu/tf-bert-large-inference/tf-max-series-bert-large-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"

  tf-bert-large-training:
    image: intel/language-modeling:tf-max-gpu-bert-large-training
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        MAX_TF_BASE_IMAGE: ${MAX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        MAX_TF_BASE_TAG: ${MAX_TF_BASE_TAG:-gpu-horovod}    
        MODEL_URL: ${MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1_int8.pb}
      dockerfile: docker/max-gpu/tf-bert-large-training/tf-max-series-bert-large-training.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
      
