#
# -*- coding: utf-8 -*-
#
# Copyright (c) 2023 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#

version: '3'
services:
  pytorch-resnet50v1-5-inference:
    image: intel/image-recognition:pytorch-flex-gpu-resnet50v1-5-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        BASE_TAG: ${FLEX_PYT_BASE_TAG:-xpu-flex}
      dockerfile: docker/flex-gpu/pytorch-resnet50v1-5-inference/pytorch-flex-series-resnet50v1-5-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"
  pytorch-ssd-mobilenet-inference:
    image: intel/object-detection:pytorch-flex-gpu-ssd-mobilenet-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        BASE_TAG: ${FLEX_PYT_BASE_TAG:-xpu-flex}
        VOC_LABELS_URL: ${VOC_LABELS_URL:-https://drive.google.com/uc?id=1q1sXhKIxniInw3WASnEDKYMqPMuiDDvc}   
      dockerfile: docker/flex-gpu/pytorch-ssd-mobilenet-inference/pytorch-flex-series-ssd-mobilenet-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"
  pytorch-yolov4-inference:
    image: intel/object-detection:pytorch-flex-gpu-yolov4-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_PYT_BASE_IMAGE:-intel/intel-extension-for-pytorch}
        BASE_TAG: ${FLEX_PYT_BASE_TAG:-xpu-flex}   
      dockerfile: docker/flex-gpu/pytorch-yolov4-inference/pytorch-flex-series-yolov4-inference.Dockerfile
    command: >
      sh -c "python -c 'import torch; import intel_extension_for_pytorch as ipex; print(\"torch:\", torch.__version__, \" ipex:\",ipex.__version__)'"
  tf-resnet50v1-5-inference:
    image: intel/image-recognition:tf-flex-gpu-resnet50v1-5-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        BASE_TAG: ${FLEX_TF_BASE_TAG:-xpu}   
        MODEL_URL: ${MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1_int8.pb}
      dockerfile: docker/flex-gpu/tf-resnet50v1-5-inference/tf-flex-series-resnet50v1-5-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
  tf-ssd-mobilenet-inference:
    image: intel/object-detection:tf-flex-gpu-ssd-mobilenet-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        BASE_TAG: ${FLEX_TF_BASE_TAG:-gpu}
        MODEL_URL: ${MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/ssd_mobilenet_v1_int8_itex.pb}   
      dockerfile: docker/flex-gpu/tf-ssd-mobilenet-inference/tf-flex-series-ssd-mobilenet-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
  tf-maskrcnn-inference:
    image: intel/image-segmentation:tf-flex-gpu-maskrcnn-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        BASE_IMAGE: ${FLEX_TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        BASE_TAG: ${FLEX_TF_BASE_TAG:-xpu}
      dockerfile: docker/flex-gpu/tf-maskrcnn-inference/tf-flex-series-maskrcnn-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"

