# Copyright (c) 2020-2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG TF_BASE_IMAGE=intel/intel-optimized-tensorflow-avx512

ARG TF_BASE_TAG=latest

FROM ${TF_BASE_IMAGE}:${TF_BASE_TAG}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace/tf-resnet50v1-5-training

ARG PY_VERSION=3.10
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa -y  && \
    apt install -y python${PY_VERSION} \
    python${PY_VERSION}-dev 

RUN apt-get update && apt-get install -y build-essential 
RUN apt-get install --no-install-recommends --fix-missing -y curl ca-certificates python${PY_VERSION}-dev && \
    apt-get clean all

RUN apt-get update -y && \
    apt-get install --no-install-recommends --fix-missing -y cmake python3-tk libxext-dev libsm-dev && \
    apt-get clean all

# Install OpenMPI
ARG OPENMPI_VERSION="openmpi-4.1.0"
ARG OPENMPI_DOWNLOAD_URL="https://www.open-mpi.org/software/ompi/v4.1/downloads/openmpi-4.1.0.tar.gz"

RUN mkdir /tmp/openmpi && \
    cd /tmp/openmpi && \
    curl -fSsL -O ${OPENMPI_DOWNLOAD_URL} && \
    tar zxf ${OPENMPI_VERSION}.tar.gz && \
    cd ${OPENMPI_VERSION} && \
    ./configure --enable-mpirun-prefix-by-default && \
    make -j $(nproc) all && \
    make install && \
    ldconfig && \
    cd / && \
    rm -rf /tmp/openmpi

# Create a wrapper for OpenMPI to allow running as root by default
RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real && \
    echo '#!/bin/bash' > /usr/local/bin/mpirun && \
    echo 'mpirun.real --allow-run-as-root "$@"' >> /usr/local/bin/mpirun && \
    chmod a+x /usr/local/bin/mpirun

# Configure OpenMPI to run good defaults:
RUN echo "btl_tcp_if_exclude = lo,docker0" >> /usr/local/etc/openmpi-mca-params.conf

# Install OpenSSH for MPI to communicate between containers
RUN apt-get update -y && apt-get install --no-install-recommends --fix-missing -y  \
    openssh-server \
    openssh-client && \
    rm  /etc/ssh/ssh_host_*_key \
    /etc/ssh/ssh_host_*_key.pub && \
    apt-get clean all

ARG HOROVOD_VERSION=39c8f7c
ENV HOROVOD_WITHOUT_MXNET=1 \
    HOROVOD_WITHOUT_PYTORCH=1 \
    HOROVOD_WITH_TENSORFLOW=1 \
    HOROVOD_CPU_OPERATIONS=MPI \
    HOROVOD_WITH_MPI=1 \
    HOROVOD_WITHOUT_GLOO=1

# Install Horovod
RUN apt-get update -y && apt-get install --no-install-recommends --fix-missing -y git && \
    apt-get clean all

RUN python3 -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}

COPY benchmarks benchmarks
COPY models models
COPY quickstart/image_recognition/tensorflow/resnet50v1_5/training/cpu/multi_instance_training.sh quickstart/training.sh
COPY quickstart/image_recognition/tensorflow/resnet50v1_5/training/cpu/multi_instance_training_demo.sh quickstart/training_demo.sh
COPY quickstart/common quickstart/common

RUN apt-get update -y && apt-get install --no-install-recommends --fix-missing -y numactl

COPY LICENSE license/LICENSE
COPY third_party license/third_party

COPY docker/tf-cpu/generate_ssh_key.sh /workspace/generate_ssh_key.sh

RUN cat /workspace/generate_ssh_key.sh >> ${HOME}/.bash_profile && \
    cat /workspace/generate_ssh_key.sh >> ${HOME}/.bashrc

ENV BASH_ENV=/root/.bash_profile
